source("textPreproc.R")
source("sentimentAnalysis.R")
source("./auxFunctions.R")
library("mscstexta4r")
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
source("textPreproc.R")
source("sentimentAnalysis.R")
source("./auxFunctions.R")
install.packages("mscstexta4r")
source("textPreproc.R")
source("sentimentAnalysis.R")
source("./auxFunctions.R")
install.packages("mscstexta4r")
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
library("wordcloud")
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
library("wordcloud")
textToSearch <- "Bahia"
noOfTweets <- 10000
# harvest some tweets
some_tweets = searchTwitter(textToSearch, n=noOfTweets, lang='pt-br')
# get the text
some_txt = sapply(some_tweets, function(x) x$getText())
some_txt <- textPreprocessing(some_txt)
library("maps")
library("devtools")
library("streamR")
library("RCurl")
library("RJSONIO")
library("stringr")
library("ROAuth")
library("twitteR")
library("ROAuth")
#library("mscstexta4r")
connect<-function(){
# Set SSL certs globally
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
apiKey <-  getAPIKey("../authorization.txt")
apiSecret <- getAPISecret("../authorization.txt")
accessToken <- getAccessToken("../authorization.txt")
accessSecret <- getAccessSecret("../authorization.txt")
twitCred <- OAuthFactory$new(
consumerKey = apiKey,
consumerSecret = apiSecret,
requestURL = reqURL,
accessURL = accessURL,
authURL = authURL
)
setup_twitter_oauth(apiKey, apiSecret, tokenKey, tokenSecret)
}
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
source("twitterMining.R")
library("wordcloud")
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
source("twitterMining.R")
library("wordcloud")
connectTwitterApp()
# Set SSL certs globally
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
apiKey <-  getAPIKey("../authorization.txt")
apiSecret <- getAPISecret("../authorization.txt")
accessToken <- getAccessToken("../authorization.txt")
accessSecret <- getAccessSecret("../authorization.txt")
setup_twitter_oauth(apiKey, apiSecret, tokenKey, tokenSecret)
setup_twitter_oauth(apiKey, apiSecret, accessToken, accessSecret)
source("textPreproc.R")
source("sentimentAnalysis.R")
source("auxFunctions.R")
source("twitterMining.R")
library("wordcloud")
connectTwitterApp()
textToSearch <- "Bahia"
noOfTweets <- 10000
# harvest some tweets
some_tweets = searchTwitter(textToSearch, n=noOfTweets, lang='pt-br')
some_tweets
library("maps")
maps("Brazil")
map("Brazil")
map("world","Brazil")
map("world","Bahia")
map("world","Brazil",interior = TRUE)
map("world","Brazil",interior = TRUE)
map("world","Brazil",interior = FALSE)
xlimits<-c(-41.280857,-11.409874)
map("world","Brazil",xlim = xlimits)
library("mapdata")
install.packages("rworldmap")
map("worldwire","Brazil")
map("world","Brazil")
names(some_txt)
names(some_tweets)
write.csv(twListToDF(some_tweets),file = "some_tweets.csv")
twListToDF(some_tweets)$latitude
df_tweets <- twListToDF(some_tweets)
map("world","Brazil")
points(df_tweets$longitude,df_tweets$latitude)
xlimits<-c(-46.600952, -11.409874)
ylimits<-c(-18.328010, -8.5409874)
png("Brazil.png",width=1980,height=1280,res=300)
map("world","Brazil")
points(df_tweets$longitude,df_tweets$latitude)
dev.off();
map("world","Brazil",xlim=xlimits,ylim=ylimits)
points(df_tweets$longitude,df_tweets$latitude)
xlimits<-c(-46.600952, -37.3409874)
ylimits<-c(-18.328010, -8.5409874)
map("world","Brazil",xlim=xlimits,ylim=ylimits)
points(df_tweets$longitude,df_tweets$latitude)
municBR   <- readShapePoly(fn='geodata/municipios_2010.shp')
statesBR  <- readShapePoly(fn='geodata/estados_2010.shp')
regionsBR <- readShapePoly(fn='geodata/regioes_2010.shp')
install.packages("maptools")
library("maptools")
municBR   <- readShapePoly(fn='geodata/municipios_2010.shp')
statesBR  <- readShapePoly(fn='geodata/estados_2010.shp')
regionsBR <- readShapePoly(fn='geodata/regioes_2010.shp')
plot(municBR)
plot(statesBR)
str(statesBR)
plot(statesBR$nome)
plot(statesBR)
plot(statesBR[1])
plot(statesBR[2])
plot(statesBR$id)
plot(statesBR)
municBR$data
municBR@data
length(municBR@data)
(municBR@data$estado_id)
(municBR@data$estado_id)==2
municBR@data[(municBR@data$estado_id)==2]
municBR[(municBR@data$estado_id)==2]
municBR[(municBR@data$estado_id)==2,]
plot(municBR[(municBR@data$estado_id)==2,])
plot(municBR[(municBR@data$estado_id)==3,])
plot(municBR[(municBR@data$estado_id)==4,])
plot(municBR[(municBR@data$estado_id)==5,])
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19)
plot(municBR[(municBR@data$estado_id)==5,]) ####Plotting Bahia
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19,size=1)
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19,size=0.5)
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19,cex=0.5)
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19,cex=1)
plot(municBR[(municBR@data$estado_id)==5,]) ####Plotting Bahia
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19)
png("Bahia.png",width=1980,height=1280,res=300)
plot(municBR[(municBR@data$estado_id)==5,]) ####Plotting Bahia
points(df_tweets$longitude,df_tweets$latitude,col="red",pch=19)
dev.off()
